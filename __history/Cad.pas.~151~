unit Cad;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, Grids, DBGrids, DBCtrls, StdCtrls, Mask, ExtCtrls, DB,jpeg,ComObj,
  ComCtrls, RpCon, RpConDS, RpDefine, RpRave, RpRender, RpRenderPDF, RpBase,
  RpSystem;

type
  TForm2 = class(TForm)
    Panel1: TPanel;
    DBEdit2: TDBEdit;
    DBEdit3: TDBEdit;
    DBComboBox1: TDBComboBox;
    DBEdit4: TDBEdit;
    DBGrid1: TDBGrid;
    sair: TButton;
    Button1: TButton;
    Button2: TButton;
    cmbStatus: TDBComboBox;
    Button3: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    Label4: TLabel;
    Label5: TLabel;
    Label6: TLabel;
    Label7: TLabel;
    Image1: TImage;
    Image2: TImage;
    DBEdit6: TDBEdit;
    DBEdit7: TDBEdit;
    DBEdit8: TDBEdit;
    DBComboBox2: TDBComboBox;
    Label8: TLabel;
    Label10: TLabel;
    Label11: TLabel;
    Label12: TLabel;
    Button4: TButton;
    edtBuscaRota: TEdit;
    Label13: TLabel;
    DBEdit1: TDBEdit;
    DBEdit9: TDBEdit;
    Button5: TButton;
    Button6: TButton;
    RvProject1: TRvProject;
    RvDataSetConnection1: TRvDataSetConnection;
    Button7: TButton;
    RvSystem1: TRvSystem;
    RvRenderPDF1: TRvRenderPDF;
    Label14: TLabel;
    Label15: TLabel;
    Label16: TLabel;
    DBEdit10: TDBEdit;
    DBEdit11: TDBEdit;
    DBEdit12: TDBEdit;
    Timer1: TTimer;
    DBEdit13: TDBEdit;
    Label18: TLabel;
    DBEdit14: TDBEdit;
    Label19: TLabel;
    DBNavigator1: TDBNavigator;
    DBRadioGroup1: TDBRadioGroup;
    DBRadioGroup2: TDBRadioGroup;
    DBRadioGroup3: TDBRadioGroup;
    Button8: TButton;
    Button9: TButton;
    Edit2: TEdit;
    Label9: TLabel;
    DBEdit5: TDBEdit;
    DBEdit15: TDBEdit;
    procedure DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
    procedure sairClick(Sender: TObject);
    procedure DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure btnIncluirClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure Button4Click(Sender: TObject);
    procedure edtBuscaRotaChange(Sender: TObject);
    procedure Button5Click(Sender: TObject);
    procedure Edit2Enter(Sender: TObject);
    procedure Button6Click(Sender: TObject);
    procedure Button7Click(Sender: TObject);
    procedure Timer1Timer(Sender: TObject);
    procedure Button8Click(Sender: TObject);
    procedure Edit2Change(Sender: TObject);
    procedure Button9Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation

uses DMMoni, Monitor, CadastRota, consulta;

{$R *.dfm}

procedure TForm2.btnIncluirClick(Sender: TObject);
begin
  {  if dm.cdsMonitoramento.State in [dsBrowse] then
    begin
        dm.cdsMonitoramento.Append;
    end; }
end;

procedure TForm2.Button1Click(Sender: TObject);
begin
    try
      Form3 := TForm3.Create(self);
      Form3.ShowModal;
    finally
       FreeAndNil(Form3);
    end;
end;

procedure TForm2.Button2Click(Sender: TObject);
begin
    if (cmbStatus.Text = 'FINALIZADO') and (Application.MessageBox('Deseja finalizar a rota?', 'Confirmação', MB_ICONEXCLAMATION + MB_YESNO) = mrYes) then
    begin
        if dm.cdsMonitoramento.State in [dsInsert, dsEdit] then
        begin
            dm.cdsMonitoramento.Post;
            dm.cdsMonitoramento.ApplyUpdates(0);
            dm.cdsMonitoramento.Refresh;
        end;
    end;

    if (cmbStatus.Text <> 'FINALIZADO') then
    begin
        if dm.cdsMonitoramento.State in [dsInsert, dsEdit] then
        begin
            dm.cdsMonitoramento.Post;
            dm.cdsMonitoramento.ApplyUpdates(0);
            dm.cdsMonitoramento.Refresh;
        end;
    end;
end;

procedure TForm2.Button3Click(Sender: TObject);
begin
DBRadioGroup2.ItemIndex:=-1;
DBRadioGroup3.ItemIndex:=-1;
DBRadioGroup1.ItemIndex:=-1;


//DBEDIT5.Clear;
end;

procedure TForm2.Button4Click(Sender: TObject);
begin
    try
      Form4 := TForm4.Create(self);
      Form4.ShowModal;
    finally
       FreeAndNil(Form4);
    end;
end;

procedure TForm2.Button5Click(Sender: TObject);
Var
linha, coluna: integer;
planilha: variant;
valorCampo: string;
begin
   planilha:= CreateOleObject('Excel.Application');
   planilha.Workbooks.add(1);
   planilha.Cells.Select;
   planilha.Selection.NumberFormat := '@';
   planilha.caption:= 'Exportação de dados para o excel';
   planilha.visible:= true;
   dm.cdsMonitoramento.First;
   for linha:= 0 to dm.cdsMonitoramento.RecordCount-1 do
   begin
     for coluna:= 1 to dm.cdsMonitoramento.FieldCount do
      begin
         valorCampo:= dm.cdsMonitoramento.Fields[coluna-1].AsString;
         planilha.cells[linha+2,coluna]:= valorCampo;

      end;

     dm.cdsMonitoramento.Next;
     //DMCadCarreta.DataModule3.ClientDataSet1.Next;

   end;
   for coluna:=1 to dm.cdsMonitoramento.FieldCount do
 //  for coluna:=1 to DMCadCarreta.DataModule3.ClientDataSet1.FieldCount do
   begin
      valorCampo:= dm.cdsMonitoramento.Fields[coluna-1].DisplayLabel;
      planilha.cells[1,coluna]:= valorCampo;

   end;
   planilha.columns.AutoFit;
end;



procedure TForm2.Button6Click(Sender: TObject);
var
  Outlook: OleVariant;
  vMailItem: variant;
const
  olMailItem = 0;
begin
  try
    Outlook := GetActiveOleObject('Outlook.Application');
  except
    Outlook := CreateOleObject('Outlook.Application');
  end;
  vMailItem := Outlook.CreateItem(olMailItem);
  //vMailItem.Subject := '';
  vMailItem.Body := 'TK Logistica do Brasil';
  vMailItem.Attachments.Add('\\172.18.0.2\Win32\Win32\TKL\.pdf');
  vMailItem.GetInspector.Activate;
  vMailItem.Display(True);
  VarClear(Outlook);
end;


procedure TForm2.Button7Click(Sender: TObject);
    begin



  RvSystem1.DefaultDest:= rdFile;
  RvSystem1.DoNativeOutput := false;
  RvSystem1.RenderObject :=rvRenderPDF1;
  RvSystem1.OutputFileName:= '\\172.18.0.2\Win32\Win32\TKL\.pdf'; //caminho onde vai gerar o arquivo pdf
  RvSystem1.SystemSetups:= RvSystem1.SystemSetups -[ssAllowSetup];
  RvProject1.ProjectFile := 'C:TesteRelatorioQuickProjetoRelatorioPDF.rav';//Local que coloquei o rav como exemplo
  RvProject1.Engine:= RvSystem1;
  RvProject1.SelectReport('Teste1', True); // nome do page no rav criado
  RvProject1.ExecuteReport('RelatorioPDF'); // nome do *.rav
  RvProject1.Execute;





end;



procedure TForm2.Button8Click(Sender: TObject);
begin
  if dm.cdsMonitoramento.State in [dsBrowse] then
    begin
        dm.cdsMonitoramento.Append;
    end;
end;

procedure TForm2.Button9Click(Sender: TObject);
begin
consultar.ShowModal;
end;

procedure TForm2.DBGrid1DrawColumnCell(Sender: TObject; const Rect: TRect;
  DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
    if not dm.cdsMonitoramento.IsEmpty then
    begin
        if (StrToTime(dm.cdsMonitoramento.FieldByName('HORA_INI').AsString) <= Time) and (StrToTime(dm.cdsMonitoramento.FieldByName('HORA_FIM').AsString) <= Time) then
           DBGrid1.Canvas.Brush.Color:= clgreen
        else
           DBGrid1.Canvas.Brush.Color:= clwhite;

        DBGrid1.Canvas.Font.Color:= clWindowText;
        DBGrid1.Canvas.FillRect(Rect);
        DBGrid1.DefaultDrawColumnCell(Rect, DataCol, Column, State);
    end;
  end;



procedure TForm2.DBNavigator1Click(Sender: TObject; Button: TNavigateBtn);
begin
DMMoni.dm.cdsMonitoramento.ApplyUpdates(0);
DMMoni.dm.cdsMonitoramento.Insert;
DMMoni.dm.cdsMonitoramento.Refresh;
end;

procedure TForm2.edtBuscaRotaChange(Sender: TObject);
begin
    if edtBuscaRota.Text <> '' then
    begin
        dm.cdsMonitoramento.Filtered := False;
        dm.cdsMonitoramento.Filter   := 'ROTA LIKE ' + QuotedStr(edtBuscaRota.text+'%');
        dm.cdsMonitoramento.Filtered := true;
        ShowMessage('fdgsfs');
    end;
end;

procedure TForm2.Edit2Change(Sender: TObject);
begin
dm.cdsMonitoramento.Filtered := False;
dm.cdsMonitoramento.Filter := 'DATA LIKE '+QuotedStr(Edit2.text+'%');
dm.cdsMonitoramento.Filtered := true;
end;

procedure TForm2.Edit2Enter(Sender: TObject);
begin
//edit2.text := datetostr ( now )
end;

procedure TForm2.FormClose(Sender: TObject; var Action: TCloseAction);
begin
    dm.cdsMonitoramento.Close;
end;

procedure TForm2.FormCreate(Sender: TObject);
begin
    dm.cdsMonitoramento.Open;
end;

procedure TForm2.sairClick(Sender: TObject);
begin
close;
end;

procedure TForm2.Timer1Timer(Sender: TObject);
begin
   if (not dm.cdsMonitoramento.IsEmpty) and (StrToTime(dm.cdsMonitoramento.FieldByName('HORA_INI').AsString) <= Time) then
   begin
      DBGrid1.Canvas.Brush.Color:= clgreen;
      DBGrid1.Canvas.Brush.Color:= clwhite;
   end;

   if (not dm.cdsMonitoramento.IsEmpty) and (StrToTime(dm.cdsMonitoramento.FieldByName('HORA_FIM').AsString) <= Time) then
   begin
      DBGrid1.Canvas.Brush.Color:= clred ;
      DBGrid1.Canvas.Brush.Color:= clwhite;
      DBGrid1.Canvas.Font.Color:= clWindowText;
   end;
end;
end.
